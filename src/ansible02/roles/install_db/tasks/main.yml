- name: Install PostgreSQL
  apt:
    name: postgresql-14
    state: present
    update_cache: yes
    cache_valid_time: 3600
  tags: install

- name: Configure PostgreSQL
  lineinfile:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^{{ item.regexp }}'
    line: "{{ item.line }}"
    backup: yes
  with_items:
    - { regexp: '^listen_addresses\s*=', line: "listen_addresses = '*'" }
    - { regexp: '^max_connections\s*=', line: "max_connections = 200" }
    - { regexp: '^shared_buffers\s*=', line: "shared_buffers = 256MB" }
    - { regexp: '^effective_cache_size\s*=', line: "effective_cache_size = 768MB" }
    - { regexp: '^work_mem\s*=', line: "work_mem = 16MB" }
    - { regexp: '^maintenance_work_mem\s*=', line: "maintenance_work_mem = 64MB" }
  notify: restart postgresql
  tags: config

- name: Configure client authentication
  lineinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    line: "host    all             all             192.168.60.0/24           md5"
    backup: yes
  notify: restart postgresql
  tags: auth

- name: Ensure PostgreSQL is running
  service:
    name: postgresql
    state: started
    enabled: yes
  tags: service

- name: Create database
  become_user: postgres
  postgresql_db:
    name: hotels_db
    state: present
    encoding: 'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
  tags: db

- name: Create user
  become_user: postgres
  postgresql_user:
    name: hotel_user
    password: "securepassword"
    state: present
    role_attr_flags: "CREATEDB,LOGIN"
  tags: user

- name: Create table
  become_user: postgres
  postgresql_query:
    db: hotels_db
    query: |
      CREATE TABLE IF NOT EXISTS hotels (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        location VARCHAR(100) NOT NULL,
        created_at TIMESTAMP DEFAULT NOW()
      );
  tags: table

- name: Create index for optimization
  become_user: postgres
  postgresql_query:
    db: hotels_db
    query: "CREATE INDEX IF NOT EXISTS idx_hotels_name ON hotels(name)"
  tags: index

- name: Insert sample data
  become_user: postgres
  postgresql_query:
    db: hotels_db
    query: |
      INSERT INTO hotels (name, location) 
      VALUES 
        ('Hotel California', 'California'), 
        ('Grand Budapest Hotel', 'Budapest'), 
        ('The Plaza', 'New York')
      ON CONFLICT (name) DO NOTHING;
  tags: data

- name: Vacuum and analyze database
  become_user: postgres
  postgresql_query:
    db: hotels_db
    query: "VACUUM ANALYZE"
  tags: maintenance