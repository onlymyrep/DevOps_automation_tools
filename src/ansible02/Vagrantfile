Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  
  # Оптимизация ресурсов VirtualBox
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--memory", "2048"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
    vb.customize ["modifyvm", :id, "--paravirtprovider", "kvm"]
  end

  config.vm.synced_folder "../services", "/home/vagrant/services", type: "rsync", rsync__exclude: [".git", "target/*"]
  config.vm.synced_folder "../consul01", "/home/vagrant/consul", type: "rsync"
  config.vm.synced_folder "../", "/vagrant"

  config.vm.define "consul_server" do |server|
    server.vm.hostname = "consul-server"
    server.vm.network "private_network", ip: "192.168.60.10"
    server.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = 1
    end
    server.vm.provision "file", 
      source: "../consul01/consul_server.hcl", 
      destination: "/tmp/consul_server.hcl"
  end

  config.vm.define "api" do |api|
    api.vm.hostname = "api"
    api.vm.network "private_network", ip: "192.168.60.11"
    api.vm.network "forwarded_port", guest: 8080, host: 8082
    api.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
    end
    api.vm.provision "file", 
      source: "../consul01/consul_client_api.hcl", 
      destination: "/tmp/consul_client.hcl"
  end

  config.vm.define "manager" do |manager|
    manager.vm.hostname = "manager"
    manager.vm.network "private_network", ip: "192.168.60.12"
    manager.vm.network "forwarded_port", guest: 8500, host: 8500
    manager.vm.synced_folder ".", "/home/vagrant/ansible"
  end

  config.vm.define "db" do |db|
    db.vm.hostname = "db"
    db.vm.network "private_network", ip: "192.168.60.13"
    db.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
    end
    db.vm.provision "file", 
      source: "../consul01/consul_client_db.hcl", 
      destination: "/tmp/consul_client.hcl"
  end

  # Оптимизированный провижионинг
  config.vm.provision "shell", inline: <<-SHELL
    # Удаляем конфликтующие источники Docker
    rm -f /etc/apt/sources.list.d/docker.list
    rm -f /etc/apt/keyrings/docker.gpg
    
    # Обновляем APT с кешированием
    apt-get update -o Acquire::http::No-Cache=True -o Acquire::http::Pipeline-Depth=0
    apt-get install -y python3 python3-pip python3-setuptools rsync jq
    
    # Устанавливаем pip и Ansible с оптимизацией
    python3 -m ensurepip --upgrade
    pip3 install --no-cache-dir --upgrade pip
    pip3 install --no-cache-dir ansible
    
    # Отключаем ненужные сервисы
    systemctl stop unattended-upgrades
    systemctl disable unattended-upgrades
    ufw --force disable
    
    # Оптимизация файловой системы
    echo "vm.swappiness=10" >> /etc/sysctl.conf
    echo "vm.dirty_ratio=60" >> /etc/sysctl.conf
    echo "vm.dirty_background_ratio=2" >> /etc/sysctl.conf
    sysctl -p
  SHELL
end