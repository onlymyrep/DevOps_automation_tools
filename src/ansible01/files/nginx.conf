events {
    worker_connections 1024;
}

http {
    # DNS резолвер для Docker Swarm
    resolver 127.0.0.11 valid=10s ipv6=off;
    
    server {
        listen 80;

        # Эндпоинт для проверки работоспособности
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Добавляем обработку ошибок
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            return 502 '{"error": "Service temporarily unavailable"}';
            add_header Content-Type application/json;
        }

        # Проксификация для session API
        location /api/v1/auth/ {
            proxy_pass http://session:8081/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_next_upstream error timeout;
        }

        # Все остальные запросы на gateway на порт 8087
        location / {
            proxy_pass http://gateway:8087;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_next_upstream error timeout;
        }
    }
}
